{
 "kind": "discovery#rpcDescription",
 "etag": "\"0NZZm4UuLZgEQBhMTwnFS1XIMrM/GJWT8joSdw6yr13ZeyeqE1995iQ\"",
 "discoveryVersion": "v1",
 "id": "api:v1",
 "name": "api",
 "version": "v1",
 "description": "This is an API",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rpc",
 "rootUrl": "https://patota-hackathon.appspot.com/_ah/api/",
 "rpcUrl": "https://patota-hackathon.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "Challenge": {
   "id": "Challenge",
   "type": "object",
   "properties": {
    "accepted": {
     "type": "boolean"
    },
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "expires": {
     "type": "string",
     "format": "date-time"
    },
    "groupId": {
     "type": "string"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "lat": {
     "type": "number",
     "format": "float"
    },
    "lng": {
     "type": "number",
     "format": "float"
    },
    "location": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "opponentGroupId": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "ChallengeBulk": {
   "id": "ChallengeBulk",
   "type": "object",
   "properties": {
    "challenges": {
     "type": "array",
     "items": {
      "$ref": "Challenge"
     }
    }
   }
  },
  "DateBulk": {
   "id": "DateBulk",
   "type": "object",
   "properties": {
    "date": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "Event": {
   "id": "Event",
   "type": "object",
   "properties": {
    "date": {
     "type": "string",
     "format": "date-time"
    },
    "groups": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "lat": {
     "type": "number",
     "format": "float"
    },
    "lng": {
     "type": "number",
     "format": "float"
    },
    "location": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "Group": {
   "id": "Group",
   "type": "object",
   "properties": {
    "id": {
     "type": "string",
     "format": "int64"
    },
    "members": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "name": {
     "type": "string"
    },
    "userEmail": {
     "type": "string"
    }
   }
  },
  "GroupBulk": {
   "id": "GroupBulk",
   "type": "object",
   "properties": {
    "groups": {
     "type": "array",
     "items": {
      "$ref": "Group"
     }
    }
   }
  },
  "GroupMember": {
   "id": "GroupMember",
   "type": "object",
   "properties": {
    "abilityLevel": {
     "type": "integer",
     "format": "int32"
    },
    "confirmed": {
     "type": "boolean"
    },
    "groups": {
     "type": "array",
     "items": {
      "type": "string",
      "format": "int64"
     }
    },
    "id": {
     "type": "string"
    },
    "keeper": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    }
   }
  }
 },
 "methods": {
  "api.patotaAPI.acceptChallenge": {
   "id": "api.patotaAPI.acceptChallenge",
   "parameters": {
    "challengeId": {
     "type": "string",
     "required": true,
     "format": "int64"
    },
    "groupId": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "groupId",
    "challengeId"
   ],
   "returns": {
    "$ref": "Challenge"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "api.patotaAPI.addChallenge": {
   "id": "api.patotaAPI.addChallenge",
   "parameters": {
    "resource": {
     "$ref": "Challenge"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Challenge"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "api.patotaAPI.addEvent": {
   "id": "api.patotaAPI.addEvent",
   "parameters": {
    "resource": {
     "$ref": "Event"
    }
   },
   "parameterOrder": [
    "resource"
   ],
   "returns": {
    "$ref": "Event"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "api.patotaAPI.addMember": {
   "id": "api.patotaAPI.addMember",
   "parameters": {
    "groupId": {
     "type": "string",
     "required": true,
     "format": "int64"
    },
    "resource": {
     "$ref": "GroupMember"
    }
   },
   "parameterOrder": [
    "resource",
    "groupId"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "api.patotaAPI.allChallenges": {
   "id": "api.patotaAPI.allChallenges",
   "returns": {
    "$ref": "ChallengeBulk"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "api.patotaAPI.allGroups": {
   "id": "api.patotaAPI.allGroups",
   "returns": {
    "$ref": "GroupBulk"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "api.patotaAPI.getGroup": {
   "id": "api.patotaAPI.getGroup",
   "allowGet": true,
   "parameters": {
    "groupId": {
     "type": "string",
     "required": true,
     "format": "int64"
    }
   },
   "parameterOrder": [
    "groupId"
   ],
   "returns": {
    "$ref": "Group"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "api.patotaAPI.insertGroup": {
   "id": "api.patotaAPI.insertGroup",
   "parameters": {
    "groupName": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "groupName"
   ],
   "returns": {
    "$ref": "Group"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "api.patotaAPI.now": {
   "id": "api.patotaAPI.now",
   "returns": {
    "$ref": "DateBulk"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "api.patotaAPI.removeMember": {
   "id": "api.patotaAPI.removeMember",
   "parameters": {
    "groupId": {
     "type": "string",
     "required": true,
     "format": "int64"
    },
    "resource": {
     "$ref": "GroupMember"
    }
   },
   "parameterOrder": [
    "resource",
    "groupId"
   ],
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
